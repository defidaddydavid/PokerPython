import random

# Simulation parameters
starting_balance = 40
num_hands = 100
balance = starting_balance

# Poker hand rankings simplified
hand_rankings = {
    "high_card": 1,
    "pair": 2,
    "two_pair": 3,
    "three_of_a_kind": 4,
    "straight": 5,
    "flush": 6,
    "full_house": 7,
    "four_of_a_kind": 8,
    "straight_flush": 9,
    "royal_flush": 10
}

# Outcome simulation for each hand
def play_hand(balance, ante=1):
    hand_result = random.choices(['win', 'lose'], weights=[45, 55], k=1)[0]  # Slight edge to casino in long-term
    if hand_result == 'win':
        payout = random.uniform(0.5, 4) * ante  # Win payouts vary
        balance += payout
    else:
        balance -= ante  # Lose the ante amount
    return balance, hand_result

# Running the simulation
results = []
win_count = 0
loss_count = 0

for hand in range(num_hands):
    balance, outcome = play_hand(balance)
    if outcome == "win":
        win_count += 1
    else:
        loss_count += 1
    results.append((hand + 1, balance, outcome))

# Convert results into a readable format for display
import pandas as pd
results_df = pd.DataFrame(results, columns=["Hand", "Balance", "Outcome"])
results_summary = {
    "Total Hands Played": num_hands,
    "Total Wins": win_count,
    "Total Losses": loss_count,
    "Final Balance": balance
}

import ace_tools as tools; tools.display_dataframe_to_user(name="Poker Simulation Results", dataframe=results_df)

results_summary
